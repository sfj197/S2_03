
db.createCollection( 'supplier', {validator: {$jsonSchema: {bsonType: 'object',title:'supplier',required: [         'name',          'phone',          'fax',          'NIF',          'address',          'brands'],properties: {name: {bsonType: 'string'},phone: {bsonType: 'int'},fax: {bsonType: 'int'},NIF: {bsonType: 'string'},address: {bsonType: 'array',items: {
title:'object',required: [         'street',          'number',          'floor',          'door',          'city',          'zipcode',          'country'],properties: {street: {bsonType: 'string'},number: {bsonType: 'int'},floor: {bsonType: 'string'},door: {bsonType: 'int'},city: {bsonType: 'string'},zipcode: {bsonType: 'int'},country: {bsonType: 'string'}}}},brands: {bsonType: 'array',items: {
title:'object',required: [         'id',          'name'],properties: {id: {bsonType: 'objectId'},name: {bsonType: 'string'}}}}}         }      }});  
db.createCollection( 'customer', {validator: {$jsonSchema: {bsonType: 'object',title:'customer',required: [         'name',          'phone',          'email',          'register_date',          'orders',          'address'],properties: {name: {bsonType: 'string'},phone: {bsonType: 'int'},email: {bsonType: 'string'},register_date: {bsonType: 'date'},orders: {bsonType: 'array',items: {
title:'object',required: [         'id',          'employee_id',          'date'],properties: {id: {bsonType: 'objectId'},employee_id: {bsonType: 'objectId'},glasses: {bsonType: 'array',items: {
title:'object',required: [         'type_frame',          'color_frame',          'price',          'color_glass',          'graduation',          'brands_id'],properties: {type_frame: {enum: float,paste,metallic},color_frame: {bsonType: 'string'},price: {bsonType: 'decimal'},color_glass: {bsonType: 'string'},graduation: {bsonType: 'array',items: {
title:'object',required: [         'left',          'rigth'],properties: {left: {bsonType: 'double'},rigth: {bsonType: 'double'}}}},brands_id: {bsonType: 'objectId'}}}},date: {bsonType: 'date'}}}},recom_customer_id: {bsonType: 'objectId'},address: {bsonType: 'object',
title:'object',required: [         'street',          'number',          'floor',          'door',          'city',          'zipcode',          'country'],properties: {street: {bsonType: 'string'},number: {bsonType: 'int'},floor: {bsonType: 'int'},door: {bsonType: 'string'},city: {bsonType: 'string'},zipcode: {bsonType: 'int'},country: {bsonType: 'string'}}}}         }      }});  
db.createCollection( 'employee', {validator: {$jsonSchema: {bsonType: 'object',title:'employee',required: [         'name'],properties: {name: {bsonType: 'string'}}         }      }});  
db.createCollection( 'customer', {validator: {$jsonSchema: {bsonType: 'object',title:'customer',required: [         'name',          'first_surname',          'second_surname',          'address',          'phone',          'zipcode',          'id_locality'],properties: {name: {bsonType: 'string'},first_surname: {bsonType: 'string'},second_surname: {bsonType: 'string'},address: {bsonType: 'array',items: {
title:'object',required: [         'street',          'number',          'floor',          'door'],properties: {street: {bsonType: 'string'},number: {bsonType: 'int'},floor: {bsonType: 'int'},door: {bsonType: 'int'}}}},phone: {bsonType: 'int'},orders: {bsonType: 'array',items: {
title:'object',required: [         'id',          'date',          'total_price',          'products_quantity'],properties: {id: {bsonType: 'string'},date: {bsonType: 'date'},total_price: {bsonType: 'double'},products_quantity: {bsonType: 'array',items: {
title:'object',required: [         'quantity',          'product_id'],properties: {quantity: {bsonType: 'int'},product_id: {bsonType: 'objectId'}}}},delivery: {bsonType: 'object',
title:'object',required: [         'date',          'employee_id'],properties: {date: {bsonType: 'date'},employee_id: {bsonType: 'objectId'}}}}}},zipcode: {bsonType: 'int'},id_locality: {bsonType: 'objectId'}}         }      }});  
db.createCollection( 'province', {validator: {$jsonSchema: {bsonType: 'object',title:'province',required: [         'name',          'localities'],properties: {name: {bsonType: 'string'},localities: {bsonType: 'array',items: {
title:'object',required: [         'id',          'name'],properties: {id: {bsonType: 'objectId'},name: {bsonType: 'string'}}}}}         }      }});  
db.createCollection( 'products', {validator: {$jsonSchema: {bsonType: 'object',title:'products',required: [         'name',          'description',          'price',          'pizzas_categories'],properties: {name: {bsonType: 'string'},description: {bsonType: 'string'},price: {bsonType: 'double'},photo: {bsonType: 'binData'},pizzas_categories: {bsonType: 'array',items: {
title:'object',required: [         'id',          'name'],properties: {id: {bsonType: 'objectId'},name: {bsonType: 'objectId'}}}}}         }      }});  
db.createCollection( 'store', {validator: {$jsonSchema: {bsonType: 'object',title:'store',required: [         'address',          'zipcode',          'locality',          'province'],properties: {address: {bsonType: 'array',items: {
title:'object',required: [         'street',          'number'],properties: {street: {bsonType: 'string'},number: {bsonType: 'int'}}}},zipcode: {bsonType: 'int'},locality: {bsonType: 'string'},province: {bsonType: 'string'},employee: {bsonType: 'array',items: {
title:'object',required: [         'id',          'name',          'first_surname',          'second_surname',          'NIF',          'phone',          'job'],properties: {id: {bsonType: 'objectId'},name: {bsonType: 'string'},first_surname: {bsonType: 'string'},second_surname: {bsonType: 'string'},NIF: {bsonType: 'string'},phone: {bsonType: 'string'},job: {enum: 'cooker','deliverier',}}}}}         }      }});  